preset raw;

#include "/Shaders/Internal/shadow_cast_shared.swsl"

const highp float g_MinVariance = 0.0;

// World-space position offset from centre to pixel.
varying highp vec2 worldSpaceDiff;

// Inverted transformation matrix from clip coordinates to difference coordinates.
uniform highp mat3 clipToDiff;

void vertex()
{
    // Convert quad-space (0.0 to 1.0) to clip-space (-1.0 to 1.0)
    VERTEX = (VERTEX.xy - 0.5) * 2.0;
    worldSpaceDiff = (clipToDiff * vec3(VERTEX, 1.0)).xy;
}

void fragment()
{
    highp float ourDist = length(worldSpaceDiff);

    highp float occlDist = occludeDepth(worldSpaceDiff, TEXTURE, 0.75).r;

    // *Very* simple biased shadow check for FOV.
    if (!doesOcclude(worldSpaceDiff, TEXTURE, 0.75, -0.75/32.0))
    {
        discard;
    }

    COLOR = vec4(0.0, 0.0, 0.0, 1.0);
}
