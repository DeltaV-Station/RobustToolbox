preset raw;

uniform vec2 direction;
uniform vec2 size;
uniform float radius;

varying vec2 pos;
varying vec4 blurPos1;
varying vec4 blurPos2;


void vertex()
{
    float aspect = size.y / size.x;
    float horRadius = aspect * radius;

    vec2 offset = vec2(horRadius, radius) * direction;

    VERTEX = apply_mvp(VERTEX);

    pos = (VERTEX + vec2(1)) / 2;

    blurPos1.xy = pos + offset;
    blurPos1.zw = pos - offset;
    blurPos2.xy = pos + offset * 2;
    blurPos2.zw = pos - offset * 2;
}


void fragment()
{
    vec4 sum = texture(TEXTURE, pos) * 0.375;
    sum += texture(TEXTURE, blurPos1.xy) * 0.25;
    sum += texture(TEXTURE, blurPos1.zw) * 0.25;
    sum += texture(TEXTURE, blurPos2.xy) * 0.0625;
    sum += texture(TEXTURE, blurPos2.zw) * 0.0625;

    COLOR = sum * 1.2;
}
